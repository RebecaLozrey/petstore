<?php

/**
*Implements hook_permission()
*
*/

function petstore_permission(){
	return array(
		'submit petstore' => array(
			'title' => t('Submit a new entry to petstore table'),
			'description' => t('Submite a new entry to petstore table'),
		),
		'access petstore' => array(
			'title' => t('Access a new entry in petstore table'),
			'description' => t('Access a new entry in petstore table'),
		),
	);
}

/**
*Implements hook_menu()
*
*/

function petstore_menu(){
	$items = array();
	$items['petstore-url'] = array(
		'title' => 'PetStore Page Title',
		'type' => MENU_NORMAL_ITEM,
		'access arguments' => array('submit petstore'),
		'page callback' => 'drupal_get_form',
		'page arguments' => array('petstore_form'),
	);
	$items['petstore-table-url'] = array(
		'title' => 'PetStore Table',
		'type' => MENU_NORMAL_ITEM,
		'access arguments' => array('access petstore'),
		'page callback' => 'petstore_table',
	);
	$items['petstore-html'] = array(
		'title' => 'Asi se ve como HTML',
		'page callback' => 'petstore_html_page',
		'access callback' => TRUE,
	);
	$items['petstore-renderable'] = array(
		'title' => 'Display a renderabe array',
		'page callback' => 'petstore_renderable_page',
		'access callback' => TRUE,
	);
	return $items;
}

/**
*Implements hook_theme().
*
*/

function petstore_theme($existing, $type, $theme, $path){
  return array(
  
    'petstore_function' => array(
      'variables' => array('text1' => NULL,'text2' => NULL,)
	  ),  
	 
	'petstore_template' => array(
	  'variables' => array('text1' => NULL,'text2' => NULL,),
	  'template' => 'petstore_template',
      ),
	  
  );
}

/**
*Callback function using HTML output
*
*/

function petstore_html_page(){
$text1 = "Data from a database";
return theme('petstore_function',array('text1' => $text1, 'text2' => 'TEXTO2!'));
}

/**
*Callback function using RENDERABLE array
*
*/

function petstore_renderable_page(){
	$text1 = "This is text one";
	$output = array(
		'#theme' => 'petstore_template',
		'#type' => 'markup',
		'#text1' => $text1,
		'#text2' => 'TEXT TWOOOO',
	);
	return $output;
}

/**
*Theme function Example
*
*/

function theme_petstore_function($variables){
	$output = "<h2>".$variables['text1']."</h2>";
	$output .= "<p>".$variables['text2']."</p>";
	return $output;
}



/**
*The form definition
*
*/

function petstore_form($form, &$form_state){
	$form['petstore_number'] = array(
		'#type' => 'textfield',
		'#title' => t('PetStore Test Number'),
		'#size' => 10,
		'#maxlength' => 10,
		'#required' => TRUE,
		'#description' => t('Please enter a valid number'),
	);
	$form['petstore_text'] = array(
		'#type' => 'textfield',
		'#title' => t('PetStore Short String'),
		'#size' => 60,
		'#maxlength' => 120,
		'#required' => TRUE,
	);
	$form['petstore_textarea'] = array(
		'#type' => 'textarea',
		'#title' => t('PetStore Long String'),
		'#default_value' => '',
		'#required' => TRUE,
	);
	$form['submit'] = array(
		'#type' => 'submit',
		'#value' => t('Add item'),
	);
	return $form;
}

/**
*Implements hook_form_validate()
*
*Validation handler for the petstore_form
*/
function petstore_form_validate($form, &$form_state){
	if(!is_numeric($form_state['values']['petstore_number'])){
		form_set_error('petstore_number',t('You must enter a valid number'));
		return FALSE;
	}
	return TRUE;
}


/**
*Submit handler
*/
function petstore_form_submit($form, &$form_state){
	$petstore_id = db_insert('petstore')
		->fields(array(
			'petstore_number' => $form_state['values']['petstore_number'],
			'petstore_text' => $form_state['values']['petstore_text'],
			'petstore_textarea' => $form_state['values']['petstore_textarea'],
		))
		->execute();
	drupal_set_message(t('Your form entry has been added'));
}




/**
*Petstore TABLE
*
*/


function petstore_table(){
$results = db_query("SELECT * FROM {petstore}");
	$header = array(t('ID'),t('NÃºmero'),t('Texto'),t('Textarea'));
	$rows = array();
	foreach($results AS $result){
		$rows[] = array(
			check_plain($result->petstore_id),
			check_plain($result->petstore_number),
			check_plain($result->petstore_text),
			check_plain($result->petstore_textarea),
		);
		
		print_r($rows);
		print_r($rows);
	}
	
	return theme('table', array('header' => $header, 'rows' => $rows));
}

/**
*Implements hook_block_info()
*
*This hook declares what blocks are provided by the module
*/

function petstore_block_info(){
	$blocks['petstore_bloque_1'] = array(
		'info' => 'Widget Pet Store'
	);
	return $blocks;
}

/**
*Implements hook_block_view()
*
*This hook passes petstore modules parameters required to render them
*/

function petstore_block_view($delta = ''){

	if($delta == 'petstore_bloque_1'){
		$block['subject'] = 'Widget Pet Store';
		$block['content'] = '<h1>Datos API Pet Store </h1>';
		}
	return $block;
}
